# Official framework image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/php
image: php:latest

# Pick zero or more services to be used on all builds.
# Only needed when using a docker container to run your tests in.
# Check out: http://docs.gitlab.com/ce/ci/docker/using_docker_images.html#what-is-a-service
services:
  - mysql:latest

stages:
  - build
  - mysql
  - laravel
  - test

variables:
  MYSQL_DATABASE: pizzapricesdemo
  MYSQL_ROOT_PASSWORD: mysecretpassword

# This folder is cached between builds
# http://docs.gitlab.com/ce/ci/yaml/README.html#cache
cache:
  paths:
    - vendor/
    - node_modules/

build:
  stage: build
  script:  # Update packages
    - apt-get update -yqq
    # Prep for Node
    - apt-get install gnupg -yqq
    # Upgrade to Node 8
    - curl -sL https://deb.nodesource.com/setup_8.x | bash -
    # Install dependencies
    - apt-get install  mysql\* -yqq
    - apt-get install git libzip-dev libonig-dev libcurl4-gnutls-dev libicu-dev libmcrypt-dev libvpx-dev libjpeg-dev libpng-dev libxpm-dev zlib1g-dev libfreetype6-dev libxml2-dev libexpat1-dev libbz2-dev libgmp3-dev libldap2-dev unixodbc-dev libpq-dev libsqlite3-dev libaspell-dev libsnmp-dev libpcre3-dev libtidy-dev -yqq
    - apt-get install curl dirmngr apt-transport-https lsb-release ca-certificates -yqq
    - curl -sL https://deb.nodesource.com/setup_12.x | bash -
    - apt -y install nodejs
    - apt -y  install gcc g++ make
    - node --version
    # Install php extensions
    - docker-php-ext-install mbstring pdo_mysql curl json intl gd xml zip bz2 opcache
    #- mysql --user=root --password="${MYSQL_ROOT_PASSWORD}" --host=mysql "${MYSQL_DATABASE}"
    # Install & enable Xdebug for code coverage reports
    - pecl install xdebug
    - docker-php-ext-enable xdebug
    # Install Composer and project dependencies.
    - curl -sS https://getcomposer.org/installer | php
    - php composer.phar install

    - npm install
    - cp .env.testing .env
    - npm run dev

mysql:
  stage: mysql
  image: mysql
  script:
  - echo "SELECT 'OK';" | mysql --user=root --password="$MYSQL_ROOT_PASSWORD" --host=mysql "$MYSQL_DATABASE"


laravel:
  stage: laravel
  script:
    - php artisan key:generate
    - php artisan config:cache
    # Run database migrations.
    - php artisan migrate
    # Run database seed
    - php artisan db:seed

test:
  stage: test
  script:
    - php vendor/bin/phpunit
    - npm test
  only:
    - branches
    - tags
  except:
    variables:
      - $TEST_DISABLED
